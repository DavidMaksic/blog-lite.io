{"mappings":"AAAA,iCAAiC;AAEjC,MAAM,OAAO,SAAS,aAAa,CAAC;AACpC,MAAM,UAAU,SAAS,cAAc,CAAC;AACxC,MAAM,MAAM,SAAS,cAAc,CAAC;AAEpC,QAAQ,gBAAgB,CAAC,SAAS;IAC/B,KAAK,SAAS,CAAC,MAAM,CAAC;IACtB,IAAI,SAAS,CAAC,MAAM,CAAC;AACxB;AAEA,4CAA4C;AAE5C,mFAAmF;AACnF,IACG,aAAa,KAAK,KAAK,UACtB,CAAE,CAAA,WAAW,YAAW,KACtB,OAAO,UAAU,CAAC,gCAAgC,OAAO,EAC7D;IACC,SAAS,eAAe,CAAC,SAAS,CAAC,GAAG,CAAC;IACvC,IAAI,SAAS,CAAC,MAAM,CAAC;AACxB,OACG,SAAS,eAAe,CAAC,SAAS,CAAC,MAAM,CAAC;AAG7C,kDAAkD;AAClD,aAAa,KAAK,GAAG;AAErB,iDAAiD;AACjD,aAAa,KAAK,GAAG;AAErB,oEAAoE;AACpE,aAAa,UAAU,CAAC;AAExB,4CAA4C;AAE5C,IAAI,WAAW,SAAS,gBAAgB,CAAC;AACzC,IAAI,aAAa,QAAQ,CAAC,EAAE;AAC5B,WAAW,SAAS,CAAC,GAAG,CAAC;AAEzB,IAAI,cAAc,SAAU,SAAS;IAClC,IAAI,WAAW,EAAE;IACjB,IAAI,UAAU,UAAU,UAAU,CAAC,UAAU;IAE7C,MAAO,QAAS;QACb,sGAAsG;QACtG,IAAI,QAAQ,QAAQ,KAAK,KAAK,YAAY,WACvC,SAAS,IAAI,CAAC;QAEjB,UAAU,QAAQ,WAAW;IAChC;IAEA,OAAO;AACV;AAEA,MAAM,mBAAmB;IACtB,yCAAyC;IACzC,IAAI,CAAC,SAAS,CAAC,GAAG,CAAC;IAEnB,uBAAuB;IACvB,IAAI,WAAW,YAAY,IAAI;IAE/B,0CAA0C;IAC1C,SAAS,OAAO,CAAC,CAAC;QACf,QAAQ,SAAS,CAAC,MAAM,CAAC;IAC5B;AACH;AAEA,IAAI;AACJ,IAAK,IAAI,GAAG,IAAI,SAAS,MAAM,EAAE,IAC9B,QAAQ,CAAC,EAAE,CAAC,gBAAgB,CAAC,SAAS","sources":["src/controller.js"],"sourcesContent":["//            --== DARK MODE ==--\r\n\r\nconst root = document.querySelector(':root');\r\nconst darkBtn = document.getElementById('dark-mode');\r\nconst dot = document.getElementById('dot');\r\n\r\ndarkBtn.addEventListener('click', function () {\r\n   root.classList.toggle('dark');\r\n   dot.classList.toggle('translate-x-6');\r\n});\r\n\r\n//     --== DARK MODE SYSTEM PREFERENCE ==--\r\n\r\n// On page load or when changing themes, best to add inline in `head` to avoid FOUC\r\nif (\r\n   localStorage.theme === 'dark' ||\r\n   (!('theme' in localStorage) &&\r\n      window.matchMedia('(prefers-color-scheme: dark)').matches)\r\n) {\r\n   document.documentElement.classList.add('dark');\r\n   dot.classList.toggle('translate-x-6');\r\n} else {\r\n   document.documentElement.classList.remove('dark');\r\n}\r\n\r\n// Whenever the user explicitly chooses light mode\r\nlocalStorage.theme = 'light';\r\n\r\n// Whenever the user explicitly chooses dark mode\r\nlocalStorage.theme = 'dark';\r\n\r\n// Whenever the user explicitly chooses to respect the OS preference\r\nlocalStorage.removeItem('theme');\r\n\r\n//            --== TOGGLE SORTING CLASS ==--\r\n\r\nlet sortBtns = document.querySelectorAll('.sort-btn');\r\nlet defaultBtn = sortBtns[0];\r\ndefaultBtn.classList.add('sortActive');\r\n\r\nlet getSiblings = function (currentEl) {\r\n   let siblings = [];\r\n   let sibling = currentEl.parentNode.firstChild;\r\n\r\n   while (sibling) {\r\n      // Sibling might be a text fragment or whitespace, and we only want elements; so we use nodeType === 1\r\n      if (sibling.nodeType === 1 && sibling !== currentEl) {\r\n         siblings.push(sibling);\r\n      }\r\n      sibling = sibling.nextSibling;\r\n   }\r\n\r\n   return siblings;\r\n};\r\n\r\nconst changeSortOption = function () {\r\n   // Adding active class to clicked element\r\n   this.classList.add('sortActive');\r\n\r\n   // Getting all siblings\r\n   let siblings = getSiblings(this);\r\n\r\n   // Removing active class from all siblings\r\n   siblings.forEach((sibling) => {\r\n      sibling.classList.remove('sortActive');\r\n   });\r\n};\r\n\r\nlet i;\r\nfor (i = 0; i < sortBtns.length; i++) {\r\n   sortBtns[i].addEventListener('click', changeSortOption);\r\n}\r\n"],"names":[],"version":3,"file":"index.253c89eb.js.map","sourceRoot":"/__parcel_source_root/"}